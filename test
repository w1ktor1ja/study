# Перед вами таблица с результатами экзамена для 6-х студентов.
# Первая строка - название столбцов. Последующие содержат данные.
grades = [
    ['Студент', 'Предм_1', 'Предм_2', 'Предм_3'],
    ['Максим', '100', '90', '80'],
    ['Елена', '88', '99', '111'],
    ['Петр', '45', '56', '67'],
    ['Феврония', '59', '61', '67'],
    ['Владимир', '73', '79', '83'],
    ['Евгения', '89', '97', '101']
]

# В переменную students запишите новый список с именами студентов,
# как они находятся в таблице сверху-вниз.

#вариант 1
students = ['Максим', 'Елена', 'Петр', 'Феврония', 'Владимир', 'Евгения']
print(*[item + '\n' for item in students])

#вариант 2
x = len(grades)
students = [0]*x

for i in range(x):
    students[i] = grades[i][0]

students.pop(0)
print('\n'.join(students))

# В переменную assignments запишите новый список с названиями предметов,
# что содержатся в первой строке.


'''assignments = ['Предм_1', 'Предм_2', 'Предм_3']''' #моя первая догадка, но она простейшая и неудобна как вариант:
# каждый раз создавать вручную - трата времени. не уверена, что правильно

assignments = list(grades[0])
assignments.pop(0)
print(assignments)

# В переменную grade_lists запишите новый словарь, который будет
# хранить по именам студентов списки их оценок. Оценки должны быть числами.
# Например grade_lists['Максим'] == [100, 90, 80].

grade_lists = {'Максим' : [100, 90, 80], 'Елена' : [88, 99, 111], 'Петр' : [45, 56, 67], 'Феврония' : [59, 61, 67], 'Владимир' : [71, 79, 83], 'Евгения' : [89, 97, 101]}
print(grade_lists) #словарь вручную, пока не могла понять, как через операторов

grade_lists = {grades[i][0]: grades[i] for i in range(1, len(grades), 1)}
print(grade_lists) #здесь запуталась, имя тоже выводится, не успела разобраться, как это исправить 

# В переменную avg_grades_by_student запишите новый словарь, который будет
# хранить по именам студентов среднюю оценку за все предметы.
# Например avg_grades_by_student['Максим'] == 90.


#Напишите функцию, которая принимала бы имя и оценки по всем трем предметам для нового студента и
# добавляла бы эту информацию в список grades
